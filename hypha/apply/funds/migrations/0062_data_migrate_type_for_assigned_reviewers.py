# Generated by Django 2.0.9 on 2019-02-24 20:10

from django.db import migrations

# Copied from hypha.apply.users.groups at time of migration to avoid
# importing and creating a future dependency. Changes to Group names should
# be handled in another migration

STAFF_GROUP_NAME = "Staff"
REVIEWER_GROUP_NAME = "Reviewer"
PARTNER_GROUP_NAME = "Partner"
COMMUNITY_REVIEWER_GROUP_NAME = "Community reviewer"

REVIEWER_GROUPS = {
    STAFF_GROUP_NAME,
    REVIEWER_GROUP_NAME,
    COMMUNITY_REVIEWER_GROUP_NAME,
    PARTNER_GROUP_NAME,
}


def add_reviewer_type(apps, schema_editor):
    AssignedReviewer = apps.get_model("funds", "AssignedReviewers")
    Group = apps.get_model("auth", "Group")
    for assigned in AssignedReviewer.objects.prefetch_related("reviewer__groups"):
        groups = (
            set(assigned.reviewer.groups.values_list("name", flat=True))
            & REVIEWER_GROUPS
        )
        if len(groups) > 1:
            if (
                PARTNER_GROUP_NAME in groups
                and assigned.reviewer in assigned.submission.partners.all()
            ):
                groups = {PARTNER_GROUP_NAME}
            elif COMMUNITY_REVIEWER_GROUP_NAME in groups:
                groups = {COMMUNITY_REVIEWER_GROUP_NAME}
            elif assigned.reviewer.is_staff or assigned.reviewer.is_superuser:
                groups = {STAFF_GROUP_NAME}
            else:
                groups = {REVIEWER_GROUP_NAME}
        elif not groups:
            if assigned.reviewer.is_staff or assigned.reviewer.is_superuser:
                groups = {STAFF_GROUP_NAME}
            else:
                groups = {REVIEWER_GROUP_NAME}

        group = Group.objects.get(name=groups.pop())
        assigned.type = group
        assigned.save()


class Migration(migrations.Migration):
    dependencies = [
        ("funds", "0061_prepare_assigned_reviewers_for_data_migration"),
    ]

    operations = [
        migrations.RunPython(add_reviewer_type, migrations.RunPython.noop),
    ]

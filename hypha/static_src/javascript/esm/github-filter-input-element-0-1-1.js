/**
 * Bundled by jsDelivr using Rollup v2.79.1 and Terser v5.17.1.
 * Original file: /npm/@github/filter-input-element@0.1.1/dist/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
class t extends HTMLElement{constructor(){super(),this.currentQuery=null,this.filter=null,this.debounceInputChange=function(t){let e;return function(){clearTimeout(e),e=setTimeout((()=>{clearTimeout(e),t()}),300)}}((()=>e(this,!0))),this.boundFilterResults=()=>{e(this,!1)}}static get observedAttributes(){return["aria-owns"]}attributeChangedCallback(t,n){n&&"aria-owns"===t&&e(this,!1)}connectedCallback(){const t=this.input;t&&(t.setAttribute("autocomplete","off"),t.setAttribute("spellcheck","false"),t.addEventListener("focus",this.boundFilterResults),t.addEventListener("change",this.boundFilterResults),t.addEventListener("input",this.debounceInputChange))}disconnectedCallback(){const t=this.input;t&&(t.removeEventListener("focus",this.boundFilterResults),t.removeEventListener("change",this.boundFilterResults),t.removeEventListener("input",this.debounceInputChange))}get input(){const t=this.querySelector("input");return t instanceof HTMLInputElement?t:null}reset(){const t=this.input;t&&(t.value="",t.dispatchEvent(new Event("change",{bubbles:!0})))}}async function e(t,e=!1){const r=t.input;if(!r)return;const u=r.value.trim(),s=t.getAttribute("aria-owns");if(!s)return;const o=document.getElementById(s);if(!o)return;const l=o.hasAttribute("data-filter-list")?o:o.querySelector("[data-filter-list]");if(!l)return;if(t.dispatchEvent(new CustomEvent("filter-input-start",{bubbles:!0})),e&&t.currentQuery===u)return;t.currentQuery=u;const c=t.filter||n,a=l.childElementCount;let d=0,f=!1;for(const t of Array.from(l.children)){if(!(t instanceof HTMLElement))continue;const e=c(t,i(t),u);!0===e.hideNew&&(f=e.hideNew),t.hidden=!e.match,e.match&&d++}const h=o.querySelector("[data-filter-new-item]"),m=!!h&&u.length>0&&!f;h instanceof HTMLElement&&(h.hidden=!m,m&&function(t,e){const n=t.querySelector("[data-filter-new-item-text]");n&&(n.textContent=e);const i=t.querySelector("[data-filter-new-item-value]");(i instanceof HTMLInputElement||i instanceof HTMLButtonElement)&&(i.value=e)}(h,u)),function(t,e){const n=t.querySelector("[data-filter-empty-state]");n instanceof HTMLElement&&(n.hidden=e)}(o,d>0||m),t.dispatchEvent(new CustomEvent("filter-input-updated",{bubbles:!0,detail:{count:d,total:a}}))}function n(t,e,n){return{match:-1!==e.toLowerCase().indexOf(n.toLowerCase()),hideNew:e===n}}function i(t){return((t.querySelector("[data-filter-item-text]")||t).textContent||"").trim()}window.customElements.get("filter-input")||(window.FilterInputElement=t,window.customElements.define("filter-input",t));export{t as default};

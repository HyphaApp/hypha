@use "sass:list";
@use "functions";
@use "variables";
@use "sass:math";

// stylelint-disable scss/at-mixin-pattern

// Media queries
@mixin media-query($queries...) {
  @each $query in $queries {
    @each $breakpoint in variables.$breakpoints {
      $name: list.nth($breakpoint, 1);
      $declaration: list.nth($breakpoint, 2);

      @if $query == $name and $declaration {
        @media only screen and #{$declaration} {
          @content;
        }
      }
    }
  }
}

// Triangle mixin
// @param {Direction} $direction - Triangle direction, either `top`, `right`, `bottom` or `left`
// @param {Color} $color [currentcolor] - Triangle color
// @param {Length} $size [1em] - Triangle size
@mixin triangle($direction, $color: currentcolor, $size: 0.33rem) {
  @if not list.index(top right bottom left, $direction) {
    @error 'Direction must be either `top`, `right`, `bottom` or `left`.';
  }

  width: 0;
  height: 0;
  content: "";
  border-#{functions.opposite-direction($direction)}: ($size * 1.5) solid $color;

  $perpendicular-borders: $size solid transparent;

  @if $direction == top or $direction == bottom {
    border-inline-end: $perpendicular-borders;
    border-inline-start: $perpendicular-borders;
  } @else if $direction == right or $direction == left {
    border-block-start: $perpendicular-borders;
    border-block-end: $perpendicular-borders;
  }
}

@mixin table-checkbox {
  input[type="checkbox"] {
    margin: 0 auto;
    display: block;
    width: 1.1rem;
    height: 1.1rem;
  }
}

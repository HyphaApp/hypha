@use "../base/base";
@use "../abstracts/mixins";
@use "../abstracts/variables";
@use "sass:math";

.form {
  $root: &;

  &__group {
    #{$root}--report-frequency & {
      &--schedule {
        display: flex;
        align-items: center;
      }

      // stylelint-disable-next-line selector-class-pattern
      &.id_occurrence {
        width: 15%;
      }

      // stylelint-disable-next-line selector-class-pattern
      &.id_frequency {
        margin: 0;
      }
    }
  }

  &__file-list {
    ul {
      margin: 0.5rem 0;
    }
  }

  &__filters {
    @include mixins.media-query(lg) {
      display: flex;
      align-items: flex-start;
      padding: 10px 0 30px;
      opacity: 0;
      transition: opacity variables.$transition;

      .filters-open & {
        opacity: 1;
        transition-delay: 300ms;
      }

      .filters--dates & {
        align-items: flex-end;
        margin: 10px 0 30px;
        padding: 0;
      }
    }

    label {
      display: none;

      .filters--dates & {
        display: block;
      }
    }

    // so the form can be output in any tag
    > * {
      @include mixins.media-query(lg) {
        flex-basis: 225px;

        &:not(:last-child) {
          margin-inline-end: 10px;
        }
      }
    }

    &--mobile {
      flex-direction: column;
      padding: 0;

      // so the form can be output in any tag
      > * {
        flex-basis: auto;
        margin: 0;
      }
    }

    > li {
      padding: 0 1rem;

      @include mixins.media-query(lg) {
        padding: 0;
      }

      // re-order from/to date inputs and text
      .filters--dates & {
        margin: 0 auto 1rem;
        max-width: 320px;

        @include mixins.media-query(sm) {
          display: flex;
          max-width: 600px;

          @supports (display: grid) {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 5px;
          }
        }

        @include mixins.media-query(lg) {
          margin: 0 1rem 0 0;
          max-width: initial;
        }

        label {
          @supports (display: grid) {
            grid-column: 1;
            grid-row: 1;
          }
        }

        input {
          &:first-of-type {
            @supports (display: grid) {
              grid-column: 1;
            }
          }
        }

        span {
          @supports (display: grid) {
            grid-column: 2;
            grid-row: 1;
          }
        }
      }
    }
  }

  &__help {
    margin: 0;
    color: var(--color-fg-muted);
    font-size: 0.875rem;
    line-height: 1.25rem;

    .profile & {
      margin-block-start: 0;
    }
  }

  &__item {
    position: relative;
    padding-block-start: 0.5rem;
  }

  &__select {
    max-width: 385px;

    &:has(.choices) {
      background: none;
    }

    .form--scoreable & {
      margin-block-start: 20px;
    }

    .form {
      &__filters & {
        max-width: 100%;

        select {
          height: variables.$dropdown-height;
        }
      }
    }

    select[multiple="multiple"] {
      display: block;
    }
  }

  select,
  input[type="url"],
  input[type="date"],
  input[type="time"],
  input[type="email"],
  input[type="number"],
  input[type="password"],
  input[type="datetime-local"] {
    &.invalid {
      --input-color: var(--color-error);
    }
  }

  &__error {
    select,
    /* textarea, */
    input[type="url"],
    input[type="text"],
    input[type="date"],
    input[type="time"],
    input[type="email"],
    input[type="number"],
    input[type="password"],
    input[type="datetime-local"] {
      --input-color: var(--color-error);
    }
  }

  &__error-text {
    max-width: 200px;
    padding: 5px;
    margin: 20px 0 0;
    color: var(--color-error-content);
    background: var(--color-error);
    z-index: 2;

    @include mixins.media-query(lg) {
      position: absolute;
      inset-block-start: 0;
      inset-inline-end: 0;
      max-width: auto;
      margin: 0;

      &::before {
        position: absolute;
        inset-block-start: 12px;
        inset-inline-start: -10px;
        border-color: transparent var(--color-error) transparent transparent;
        border-style: solid;
        border-width: 5px 10px 5px 0;
        content: "";
      }
    }
  }

  input[type="file"] {
    @extend %off-screen;

    @media (scripting: none) {
      display: block;
    }
  }

  .wmd-preview {
    width: 100%;
  }

  .wmd-input {
    field-sizing: content;
    min-height: 14rem;
  }

  &__comments {
    // stylelint-disable-next-line selector-class-pattern,selector-id-pattern
    ul#id_visibility {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
    }

    .wmd-input,
    .wmd-preview {
      max-width: 100%;
      margin-block-end: 0;
    }
  }

  .errorlist {
    padding: 5px;
    margin-block-end: 0.2em;
    background: variables.$color--light-pink;
    border: 1px solid variables.$color--tomato;
  }

  .password-reset {
    margin-block-start: -1em;
  }
}

.flash-item {
  animation: flash 1s ease 1;
}

@keyframes flash {
  50% {
    background-color: variables.$color--mustard;
  }
}

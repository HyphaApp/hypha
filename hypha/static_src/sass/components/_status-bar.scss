@use "../abstracts/mixins";

// stylelint-disable  selector-class-pattern

.status-bar {
    --bar: 3px;
    --dot: 20px;
    --triangle: 5px;
    --tooltip-padding: 10px;
    --tooltip-max-width: 12ch;
    --tooltip-margin-top: 17px;

    $root: &;
    display: none;

    @include mixins.media-query(md) {
        display: flex;
    }

    &--mobile {
        @include mixins.media-query(md) {
            display: none;
        }
    }

    &--small {
        --tooltip-max-width: 10ch;
        width: 100%;
        max-width: 750px;
        margin-inline-end: 30px;
        margin-inline-start: 16px;
    }

    &__subheading {
        display: inline-block;
        padding: 5px 10px;
        color: var(--color-white);
        background-color: var(--color-tomato);
    }

    &__text {
        font-size: var(--font-size-milli);
        font-weight: var(--weight-bold);
    }

    &__item {
        flex: 1;
        position: relative;
        padding-block-start: var(--tooltip-margin-top);

        // The bar for each item.
        border-block-start: var(--bar) solid var(--color-mid-grey);

        // The dot for each item.
        &::before {
            display: flex;
            place-items: center;
            position: absolute;
            inset-block-start: calc(-1 * var(--dot) / 2);
            inset-inline-start: calc(-1 * var(--dot) / 2);
            width: var(--dot);
            height: var(--dot);
            background: var(--color-dark-grey);
            border: calc(var(--dot) / 4) solid var(--color-mid-grey);
            border-radius: 50%;
            content: "";

            #{$root}--small & {
                background: var(--color-white);
            }
        }

        &--is-current {
            &::before {
                background: var(--color-white);
                border-color: var(--color-tomato);
            }

            // Fill the bar all the way on accepted/declined.
            &:last-of-type {
                border-color: var(--color-primary);
            }
        }

        &--is-complete {
            border-color: var(--color-primary);

            &::before {
                font-size: var(--font-size-milli);
                font-weight: var(--weight-bold);
                color: var(--color-white);
                background: var(--color-primary);
                border-color: var(--color-primary);
                content: "âœ“";

                #{$root}--small & {
                    background: var(--color-primary);
                }
            }
        }

        &:first-of-type {
            &::before {
                inset-inline-start: 0;
            }
        }

        &:nth-last-of-type(2) {
            flex: 0;
        }

        &:last-of-type {
            flex: 0;

            &::before {
                inset-inline-start: auto;
                inset-inline-end: 0;
            }
        }
    }

    &__tooltip {
        --tooltip-width: min(var(--tooltip-max-width), var(--tooltip-chars));
        width: var(--tooltip-width);
        margin-inline-start: calc(-1 * var(--tooltip-width) / 2 - 5px);
        text-align: center;
        padding-block: var(--tooltip-padding);
        color: var(--color-mid-grey);

        #{$root}__item--is-complete & {
            color: var(--color-primary);
        }

        #{$root}__item--is-current & {
            width: calc(var(--tooltip-width) + var(--tooltip-padding));
            position: relative;
            color: var(--color-white);
            background-color: var(--color-tomato);
            padding-inline: var(--tooltip-padding);
            border-radius: 0.125rem;
        }

        &::before {
            #{$root}__item--is-current & {
                @include mixins.triangle(top, var(--color-tomato), 5px);
                position: absolute;
                inset-block-start: calc(-1 * var(--triangle) - 2px);
                inset-inline-start: calc(50% - var(--triangle));
            }

            #{$root}__item--is-current:first-of-type & {
                inset-inline-start: var(--triangle);
            }

            #{$root}__item--is-current:last-of-type & {
                inset-inline-start: initial;
                inset-inline-end: var(--triangle);
            }
        }

        #{$root}__item:first-of-type & {
            margin-inline-start: initial;
            text-align: start;
        }

        #{$root}__item:last-of-type & {
            margin-inline-start: initial;
            text-align: end;
        }
    }
}

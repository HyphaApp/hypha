// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Filter dropdown component render a Filter dropdown component 1`] = `
<WithStyles(FilterDropDown)
  filter={
    Object {
      "filterKey": "filter-key",
      "label": "label text",
      "options": Array [
        Object {
          "key": 1,
          "label": "op1",
        },
        Object {
          "key": 2,
          "label": "op2",
        },
        Object {
          "key": 3,
          "label": "op3",
        },
      ],
    }
  }
  name="test name"
  renderValues={[Function]}
  value={
    Array [
      "1",
    ]
  }
>
  <FilterDropDown
    classes={
      Object {
        "formControl": "FilterDropDown-formControl-1",
      }
    }
    filter={
      Object {
        "filterKey": "filter-key",
        "label": "label text",
        "options": Array [
          Object {
            "key": 1,
            "label": "op1",
          },
          Object {
            "key": 2,
            "label": "op2",
          },
          Object {
            "key": 3,
            "label": "op3",
          },
        ],
      }
    }
    name="test name"
    renderValues={[Function]}
    value={
      Array [
        "1",
      ]
    }
  >
    <WithStyles(ForwardRef(FormControl))
      classes={
        Object {
          "root": "FilterDropDown-formControl-1",
        }
      }
      key="label text"
      size="small"
      variant="outlined"
    >
      <ForwardRef(FormControl)
        classes={
          Object {
            "fullWidth": "MuiFormControl-fullWidth",
            "marginDense": "MuiFormControl-marginDense",
            "marginNormal": "MuiFormControl-marginNormal",
            "root": "MuiFormControl-root FilterDropDown-formControl-1",
          }
        }
        size="small"
        variant="outlined"
      >
        <div
          className="MuiFormControl-root FilterDropDown-formControl-1"
        >
          <WithStyles(ForwardRef(InputLabel))>
            <ForwardRef(InputLabel)
              classes={
                Object {
                  "animated": "MuiInputLabel-animated",
                  "asterisk": "MuiInputLabel-asterisk",
                  "disabled": "Mui-disabled",
                  "error": "Mui-error",
                  "filled": "MuiInputLabel-filled",
                  "focused": "Mui-focused",
                  "formControl": "MuiInputLabel-formControl",
                  "marginDense": "MuiInputLabel-marginDense",
                  "outlined": "MuiInputLabel-outlined",
                  "required": "Mui-required",
                  "root": "MuiInputLabel-root",
                  "shrink": "MuiInputLabel-shrink",
                }
              }
            >
              <WithStyles(ForwardRef(FormLabel))
                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense MuiInputLabel-outlined"
                classes={
                  Object {
                    "asterisk": "MuiInputLabel-asterisk",
                    "disabled": "Mui-disabled",
                    "error": "Mui-error",
                    "focused": "Mui-focused",
                    "required": "Mui-required",
                  }
                }
                data-shrink={true}
              >
                <ForwardRef(FormLabel)
                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense MuiInputLabel-outlined"
                  classes={
                    Object {
                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                      "colorSecondary": "MuiFormLabel-colorSecondary",
                      "disabled": "Mui-disabled Mui-disabled",
                      "error": "Mui-error Mui-error",
                      "filled": "MuiFormLabel-filled",
                      "focused": "Mui-focused Mui-focused",
                      "required": "Mui-required Mui-required",
                      "root": "MuiFormLabel-root",
                    }
                  }
                  data-shrink={true}
                >
                  <label
                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense MuiInputLabel-outlined MuiFormLabel-filled"
                    data-shrink={true}
                  >
                    label text
                  </label>
                </ForwardRef(FormLabel)>
              </WithStyles(ForwardRef(FormLabel))>
            </ForwardRef(InputLabel)>
          </WithStyles(ForwardRef(InputLabel))>
          <WithStyles(ForwardRef(Select))
            input={<UNDEFINED />}
            multiple={true}
            name="filter-key"
            renderValue={[Function]}
            value={
              Array [
                "1",
              ]
            }
          >
            <ForwardRef(Select)
              classes={
                Object {
                  "disabled": "Mui-disabled",
                  "filled": "MuiSelect-filled",
                  "icon": "MuiSelect-icon",
                  "iconFilled": "MuiSelect-iconFilled",
                  "iconOpen": "MuiSelect-iconOpen",
                  "iconOutlined": "MuiSelect-iconOutlined",
                  "nativeInput": "MuiSelect-nativeInput",
                  "outlined": "MuiSelect-outlined",
                  "root": "MuiSelect-root",
                  "select": "MuiSelect-select",
                  "selectMenu": "MuiSelect-selectMenu",
                }
              }
              input={<UNDEFINED />}
              multiple={true}
              name="filter-key"
              renderValue={[Function]}
              value={
                Array [
                  "1",
                ]
              }
            >
              <WithStyles(ForwardRef(Input))
                inputComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "propTypes": Object {
                      "IconComponent": [Function],
                      "MenuProps": [Function],
                      "SelectDisplayProps": [Function],
                      "aria-label": [Function],
                      "autoFocus": [Function],
                      "autoWidth": [Function],
                      "children": [Function],
                      "className": [Function],
                      "classes": [Function],
                      "defaultValue": [Function],
                      "disabled": [Function],
                      "displayEmpty": [Function],
                      "inputRef": [Function],
                      "labelId": [Function],
                      "multiple": [Function],
                      "name": [Function],
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onClose": [Function],
                      "onFocus": [Function],
                      "onOpen": [Function],
                      "open": [Function],
                      "readOnly": [Function],
                      "renderValue": [Function],
                      "tabIndex": [Function],
                      "type": [Function],
                      "value": [Function],
                      "variant": [Function],
                    },
                    "render": [Function],
                  }
                }
                inputProps={
                  Object {
                    "IconComponent": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                    },
                    "MenuProps": undefined,
                    "SelectDisplayProps": Object {
                      "id": undefined,
                    },
                    "autoWidth": false,
                    "children": Array [
                      <UNDEFINED
                        value={1}
                      >
                        <UNDEFINED
                          checked={false}
                          style={
                            Object {
                              "color": "#0c72a0b3",
                            }
                          }
                        />
                        <UNDEFINED
                          primary="op1"
                        />
                      </UNDEFINED>,
                      <UNDEFINED
                        value={2}
                      >
                        <UNDEFINED
                          checked={false}
                          style={
                            Object {
                              "color": "#0c72a0b3",
                            }
                          }
                        />
                        <UNDEFINED
                          primary="op2"
                        />
                      </UNDEFINED>,
                      <UNDEFINED
                        value={3}
                      >
                        <UNDEFINED
                          checked={false}
                          style={
                            Object {
                              "color": "#0c72a0b3",
                            }
                          }
                        />
                        <UNDEFINED
                          primary="op3"
                        />
                      </UNDEFINED>,
                    ],
                    "classes": Object {
                      "disabled": "Mui-disabled",
                      "filled": "MuiSelect-filled",
                      "icon": "MuiSelect-icon",
                      "iconFilled": "MuiSelect-iconFilled",
                      "iconOpen": "MuiSelect-iconOpen",
                      "iconOutlined": "MuiSelect-iconOutlined",
                      "nativeInput": "MuiSelect-nativeInput",
                      "outlined": "MuiSelect-outlined",
                      "root": "MuiSelect-root",
                      "select": "MuiSelect-select",
                      "selectMenu": "MuiSelect-selectMenu",
                    },
                    "displayEmpty": false,
                    "labelId": undefined,
                    "multiple": true,
                    "onClose": undefined,
                    "onOpen": undefined,
                    "open": undefined,
                    "renderValue": [Function],
                    "type": undefined,
                    "variant": "outlined",
                  }
                }
                name="filter-key"
                value={
                  Array [
                    "1",
                  ]
                }
              >
                <ForwardRef(Input)
                  classes={
                    Object {
                      "colorSecondary": "MuiInput-colorSecondary",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "focused": "Mui-focused",
                      "formControl": "MuiInput-formControl",
                      "fullWidth": "MuiInput-fullWidth",
                      "input": "MuiInput-input",
                      "inputMarginDense": "MuiInput-inputMarginDense",
                      "inputMultiline": "MuiInput-inputMultiline",
                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                      "marginDense": "MuiInput-marginDense",
                      "multiline": "MuiInput-multiline",
                      "root": "MuiInput-root",
                      "underline": "MuiInput-underline",
                    }
                  }
                  inputComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "propTypes": Object {
                        "IconComponent": [Function],
                        "MenuProps": [Function],
                        "SelectDisplayProps": [Function],
                        "aria-label": [Function],
                        "autoFocus": [Function],
                        "autoWidth": [Function],
                        "children": [Function],
                        "className": [Function],
                        "classes": [Function],
                        "defaultValue": [Function],
                        "disabled": [Function],
                        "displayEmpty": [Function],
                        "inputRef": [Function],
                        "labelId": [Function],
                        "multiple": [Function],
                        "name": [Function],
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onClose": [Function],
                        "onFocus": [Function],
                        "onOpen": [Function],
                        "open": [Function],
                        "readOnly": [Function],
                        "renderValue": [Function],
                        "tabIndex": [Function],
                        "type": [Function],
                        "value": [Function],
                        "variant": [Function],
                      },
                      "render": [Function],
                    }
                  }
                  inputProps={
                    Object {
                      "IconComponent": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "MenuProps": undefined,
                      "SelectDisplayProps": Object {
                        "id": undefined,
                      },
                      "autoWidth": false,
                      "children": Array [
                        <UNDEFINED
                          value={1}
                        >
                          <UNDEFINED
                            checked={false}
                            style={
                              Object {
                                "color": "#0c72a0b3",
                              }
                            }
                          />
                          <UNDEFINED
                            primary="op1"
                          />
                        </UNDEFINED>,
                        <UNDEFINED
                          value={2}
                        >
                          <UNDEFINED
                            checked={false}
                            style={
                              Object {
                                "color": "#0c72a0b3",
                              }
                            }
                          />
                          <UNDEFINED
                            primary="op2"
                          />
                        </UNDEFINED>,
                        <UNDEFINED
                          value={3}
                        >
                          <UNDEFINED
                            checked={false}
                            style={
                              Object {
                                "color": "#0c72a0b3",
                              }
                            }
                          />
                          <UNDEFINED
                            primary="op3"
                          />
                        </UNDEFINED>,
                      ],
                      "classes": Object {
                        "disabled": "Mui-disabled",
                        "filled": "MuiSelect-filled",
                        "icon": "MuiSelect-icon",
                        "iconFilled": "MuiSelect-iconFilled",
                        "iconOpen": "MuiSelect-iconOpen",
                        "iconOutlined": "MuiSelect-iconOutlined",
                        "nativeInput": "MuiSelect-nativeInput",
                        "outlined": "MuiSelect-outlined",
                        "root": "MuiSelect-root",
                        "select": "MuiSelect-select",
                        "selectMenu": "MuiSelect-selectMenu",
                      },
                      "displayEmpty": false,
                      "labelId": undefined,
                      "multiple": true,
                      "onClose": undefined,
                      "onOpen": undefined,
                      "open": undefined,
                      "renderValue": [Function],
                      "type": undefined,
                      "variant": "outlined",
                    }
                  }
                  name="filter-key"
                  value={
                    Array [
                      "1",
                    ]
                  }
                >
                  <WithStyles(ForwardRef(InputBase))
                    classes={
                      Object {
                        "colorSecondary": "MuiInput-colorSecondary",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "formControl": "MuiInput-formControl",
                        "fullWidth": "MuiInput-fullWidth",
                        "input": "MuiInput-input",
                        "inputMarginDense": "MuiInput-inputMarginDense",
                        "inputMultiline": "MuiInput-inputMultiline",
                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                        "marginDense": "MuiInput-marginDense",
                        "multiline": "MuiInput-multiline",
                        "root": "MuiInput-root MuiInput-underline",
                        "underline": null,
                      }
                    }
                    fullWidth={false}
                    inputComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "propTypes": Object {
                          "IconComponent": [Function],
                          "MenuProps": [Function],
                          "SelectDisplayProps": [Function],
                          "aria-label": [Function],
                          "autoFocus": [Function],
                          "autoWidth": [Function],
                          "children": [Function],
                          "className": [Function],
                          "classes": [Function],
                          "defaultValue": [Function],
                          "disabled": [Function],
                          "displayEmpty": [Function],
                          "inputRef": [Function],
                          "labelId": [Function],
                          "multiple": [Function],
                          "name": [Function],
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onClose": [Function],
                          "onFocus": [Function],
                          "onOpen": [Function],
                          "open": [Function],
                          "readOnly": [Function],
                          "renderValue": [Function],
                          "tabIndex": [Function],
                          "type": [Function],
                          "value": [Function],
                          "variant": [Function],
                        },
                        "render": [Function],
                      }
                    }
                    inputProps={
                      Object {
                        "IconComponent": Object {
                          "$$typeof": Symbol(react.memo),
                          "compare": null,
                          "type": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          },
                        },
                        "MenuProps": undefined,
                        "SelectDisplayProps": Object {
                          "id": undefined,
                        },
                        "autoWidth": false,
                        "children": Array [
                          <UNDEFINED
                            value={1}
                          >
                            <UNDEFINED
                              checked={false}
                              style={
                                Object {
                                  "color": "#0c72a0b3",
                                }
                              }
                            />
                            <UNDEFINED
                              primary="op1"
                            />
                          </UNDEFINED>,
                          <UNDEFINED
                            value={2}
                          >
                            <UNDEFINED
                              checked={false}
                              style={
                                Object {
                                  "color": "#0c72a0b3",
                                }
                              }
                            />
                            <UNDEFINED
                              primary="op2"
                            />
                          </UNDEFINED>,
                          <UNDEFINED
                            value={3}
                          >
                            <UNDEFINED
                              checked={false}
                              style={
                                Object {
                                  "color": "#0c72a0b3",
                                }
                              }
                            />
                            <UNDEFINED
                              primary="op3"
                            />
                          </UNDEFINED>,
                        ],
                        "classes": Object {
                          "disabled": "Mui-disabled",
                          "filled": "MuiSelect-filled",
                          "icon": "MuiSelect-icon",
                          "iconFilled": "MuiSelect-iconFilled",
                          "iconOpen": "MuiSelect-iconOpen",
                          "iconOutlined": "MuiSelect-iconOutlined",
                          "nativeInput": "MuiSelect-nativeInput",
                          "outlined": "MuiSelect-outlined",
                          "root": "MuiSelect-root",
                          "select": "MuiSelect-select",
                          "selectMenu": "MuiSelect-selectMenu",
                        },
                        "displayEmpty": false,
                        "labelId": undefined,
                        "multiple": true,
                        "onClose": undefined,
                        "onOpen": undefined,
                        "open": undefined,
                        "renderValue": [Function],
                        "type": undefined,
                        "variant": "outlined",
                      }
                    }
                    multiline={false}
                    name="filter-key"
                    type="text"
                    value={
                      Array [
                        "1",
                      ]
                    }
                  >
                    <ForwardRef(InputBase)
                      classes={
                        Object {
                          "adornedEnd": "MuiInputBase-adornedEnd",
                          "adornedStart": "MuiInputBase-adornedStart",
                          "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                          "disabled": "Mui-disabled Mui-disabled",
                          "error": "Mui-error Mui-error",
                          "focused": "Mui-focused Mui-focused",
                          "formControl": "MuiInputBase-formControl MuiInput-formControl",
                          "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                          "input": "MuiInputBase-input MuiInput-input",
                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                          "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                          "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                          "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                          "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                          "multiline": "MuiInputBase-multiline MuiInput-multiline",
                          "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                        }
                      }
                      fullWidth={false}
                      inputComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "IconComponent": [Function],
                            "MenuProps": [Function],
                            "SelectDisplayProps": [Function],
                            "aria-label": [Function],
                            "autoFocus": [Function],
                            "autoWidth": [Function],
                            "children": [Function],
                            "className": [Function],
                            "classes": [Function],
                            "defaultValue": [Function],
                            "disabled": [Function],
                            "displayEmpty": [Function],
                            "inputRef": [Function],
                            "labelId": [Function],
                            "multiple": [Function],
                            "name": [Function],
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onClose": [Function],
                            "onFocus": [Function],
                            "onOpen": [Function],
                            "open": [Function],
                            "readOnly": [Function],
                            "renderValue": [Function],
                            "tabIndex": [Function],
                            "type": [Function],
                            "value": [Function],
                            "variant": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      inputProps={
                        Object {
                          "IconComponent": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "render": [Function],
                            },
                          },
                          "MenuProps": undefined,
                          "SelectDisplayProps": Object {
                            "id": undefined,
                          },
                          "autoWidth": false,
                          "children": Array [
                            <UNDEFINED
                              value={1}
                            >
                              <UNDEFINED
                                checked={false}
                                style={
                                  Object {
                                    "color": "#0c72a0b3",
                                  }
                                }
                              />
                              <UNDEFINED
                                primary="op1"
                              />
                            </UNDEFINED>,
                            <UNDEFINED
                              value={2}
                            >
                              <UNDEFINED
                                checked={false}
                                style={
                                  Object {
                                    "color": "#0c72a0b3",
                                  }
                                }
                              />
                              <UNDEFINED
                                primary="op2"
                              />
                            </UNDEFINED>,
                            <UNDEFINED
                              value={3}
                            >
                              <UNDEFINED
                                checked={false}
                                style={
                                  Object {
                                    "color": "#0c72a0b3",
                                  }
                                }
                              />
                              <UNDEFINED
                                primary="op3"
                              />
                            </UNDEFINED>,
                          ],
                          "classes": Object {
                            "disabled": "Mui-disabled",
                            "filled": "MuiSelect-filled",
                            "icon": "MuiSelect-icon",
                            "iconFilled": "MuiSelect-iconFilled",
                            "iconOpen": "MuiSelect-iconOpen",
                            "iconOutlined": "MuiSelect-iconOutlined",
                            "nativeInput": "MuiSelect-nativeInput",
                            "outlined": "MuiSelect-outlined",
                            "root": "MuiSelect-root",
                            "select": "MuiSelect-select",
                            "selectMenu": "MuiSelect-selectMenu",
                          },
                          "displayEmpty": false,
                          "labelId": undefined,
                          "multiple": true,
                          "onClose": undefined,
                          "onOpen": undefined,
                          "open": undefined,
                          "renderValue": [Function],
                          "type": undefined,
                          "variant": "outlined",
                        }
                      }
                      multiline={false}
                      name="filter-key"
                      type="text"
                      value={
                        Array [
                          "1",
                        ]
                      }
                    >
                      <div
                        className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense MuiInput-marginDense"
                        onClick={[Function]}
                      >
                        <ForwardRef(SelectInput)
                          IconComponent={
                            Object {
                              "$$typeof": Symbol(react.memo),
                              "compare": null,
                              "type": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "render": [Function],
                              },
                            }
                          }
                          SelectDisplayProps={
                            Object {
                              "id": undefined,
                            }
                          }
                          aria-invalid={false}
                          autoWidth={false}
                          className="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "filled": "MuiSelect-filled",
                              "icon": "MuiSelect-icon",
                              "iconFilled": "MuiSelect-iconFilled",
                              "iconOpen": "MuiSelect-iconOpen",
                              "iconOutlined": "MuiSelect-iconOutlined",
                              "nativeInput": "MuiSelect-nativeInput",
                              "outlined": "MuiSelect-outlined",
                              "root": "MuiSelect-root",
                              "select": "MuiSelect-select",
                              "selectMenu": "MuiSelect-selectMenu",
                            }
                          }
                          disabled={false}
                          displayEmpty={false}
                          inputRef={[Function]}
                          multiple={true}
                          name="filter-key"
                          onAnimationStart={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          renderValue={[Function]}
                          required={false}
                          value={
                            Array [
                              "1",
                            ]
                          }
                          variant="outlined"
                        >
                          <div
                            aria-haspopup="listbox"
                            aria-labelledby="mui-component-select-filter-key"
                            className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                            id="mui-component-select-filter-key"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <span
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "&#8203;",
                                }
                              }
                            />
                          </div>
                          <input
                            aria-hidden={true}
                            className="MuiSelect-nativeInput"
                            name="filter-key"
                            onAnimationStart={[Function]}
                            onChange={[Function]}
                            required={false}
                            tabIndex={-1}
                            value="1"
                          />
                          <ForwardRef(ArrowDropDownIcon)
                            className="MuiSelect-icon MuiSelect-iconOutlined"
                          >
                            <WithStyles(ForwardRef(SvgIcon))
                              className="MuiSelect-icon MuiSelect-iconOutlined"
                            >
                              <ForwardRef(SvgIcon)
                                className="MuiSelect-icon MuiSelect-iconOutlined"
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                    "colorError": "MuiSvgIcon-colorError",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                    "root": "MuiSvgIcon-root",
                                  }
                                }
                              >
                                <svg
                                  aria-hidden={true}
                                  className="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconOutlined"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M7 10l5 5 5-5z"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </WithStyles(ForwardRef(SvgIcon))>
                          </ForwardRef(ArrowDropDownIcon)>
                          <WithStyles(ForwardRef(Menu))
                            MenuListProps={
                              Object {
                                "aria-labelledby": undefined,
                                "disableListWrap": true,
                                "role": "listbox",
                              }
                            }
                            PaperProps={
                              Object {
                                "style": Object {
                                  "minWidth": undefined,
                                },
                              }
                            }
                            anchorEl={
                              <div
                                aria-haspopup="listbox"
                                aria-labelledby="mui-component-select-filter-key"
                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                id="mui-component-select-filter-key"
                                role="button"
                                tabindex="0"
                              >
                                <span>
                                  ​
                                </span>
                              </div>
                            }
                            id="menu-filter-key"
                            onClose={[Function]}
                            open={false}
                          >
                            <ForwardRef(Menu)
                              MenuListProps={
                                Object {
                                  "aria-labelledby": undefined,
                                  "disableListWrap": true,
                                  "role": "listbox",
                                }
                              }
                              PaperProps={
                                Object {
                                  "style": Object {
                                    "minWidth": undefined,
                                  },
                                }
                              }
                              anchorEl={
                                <div
                                  aria-haspopup="listbox"
                                  aria-labelledby="mui-component-select-filter-key"
                                  class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                  id="mui-component-select-filter-key"
                                  role="button"
                                  tabindex="0"
                                >
                                  <span>
                                    ​
                                  </span>
                                </div>
                              }
                              classes={
                                Object {
                                  "list": "MuiMenu-list",
                                  "paper": "MuiMenu-paper",
                                }
                              }
                              id="menu-filter-key"
                              onClose={[Function]}
                              open={false}
                            >
                              <WithStyles(ForwardRef(Popover))
                                PaperProps={
                                  Object {
                                    "classes": Object {
                                      "root": "MuiMenu-paper",
                                    },
                                    "style": Object {
                                      "minWidth": undefined,
                                    },
                                  }
                                }
                                anchorEl={
                                  <div
                                    aria-haspopup="listbox"
                                    aria-labelledby="mui-component-select-filter-key"
                                    class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                    id="mui-component-select-filter-key"
                                    role="button"
                                    tabindex="0"
                                  >
                                    <span>
                                      ​
                                    </span>
                                  </div>
                                }
                                anchorOrigin={
                                  Object {
                                    "horizontal": "left",
                                    "vertical": "top",
                                  }
                                }
                                getContentAnchorEl={[Function]}
                                id="menu-filter-key"
                                onClose={[Function]}
                                onEntering={[Function]}
                                open={false}
                                transformOrigin={
                                  Object {
                                    "horizontal": "left",
                                    "vertical": "top",
                                  }
                                }
                                transitionDuration="auto"
                              >
                                <ForwardRef(Popover)
                                  PaperProps={
                                    Object {
                                      "classes": Object {
                                        "root": "MuiMenu-paper",
                                      },
                                      "style": Object {
                                        "minWidth": undefined,
                                      },
                                    }
                                  }
                                  anchorEl={
                                    <div
                                      aria-haspopup="listbox"
                                      aria-labelledby="mui-component-select-filter-key"
                                      class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                      id="mui-component-select-filter-key"
                                      role="button"
                                      tabindex="0"
                                    >
                                      <span>
                                        ​
                                      </span>
                                    </div>
                                  }
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  classes={
                                    Object {
                                      "paper": "MuiPopover-paper",
                                      "root": "MuiPopover-root",
                                    }
                                  }
                                  getContentAnchorEl={[Function]}
                                  id="menu-filter-key"
                                  onClose={[Function]}
                                  onEntering={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  transitionDuration="auto"
                                >
                                  <ForwardRef(Modal)
                                    BackdropProps={
                                      Object {
                                        "invisible": true,
                                      }
                                    }
                                    className="MuiPopover-root"
                                    container={<body />}
                                    id="menu-filter-key"
                                    onClose={[Function]}
                                    open={false}
                                  />
                                </ForwardRef(Popover)>
                              </WithStyles(ForwardRef(Popover))>
                            </ForwardRef(Menu)>
                          </WithStyles(ForwardRef(Menu))>
                        </ForwardRef(SelectInput)>
                      </div>
                    </ForwardRef(InputBase)>
                  </WithStyles(ForwardRef(InputBase))>
                </ForwardRef(Input)>
              </WithStyles(ForwardRef(Input))>
            </ForwardRef(Select)>
          </WithStyles(ForwardRef(Select))>
        </div>
      </ForwardRef(FormControl)>
    </WithStyles(ForwardRef(FormControl))>
  </FilterDropDown>
</WithStyles(FilterDropDown)>
`;
